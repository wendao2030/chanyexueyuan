<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mhys.cyxy.mapper.AttendanceMapper">
    <select id="getAttendanceByTime" parameterType="java.time.LocalDate" resultMap="attendanceVO">
        select SUM(should_attend_num) should_attend_sum, SUM(real_attend_num) real_attend_sum, SUM(real_attend_num)/SUM(should_attend_num) rate, time
            from attendance where time = #{time}
    </select>

    <select id="getAttendanceByGrade" parameterType="java.time.LocalDate" resultMap="attendanceVO">
        select grade.grade_id, grade_name, SUM(should_attend_num) should_attend_sum, SUM(real_attend_num) real_attend_sum, SUM(real_attend_num)/SUM(should_attend_num) rate, time
	        from attendance, grade, classes
	            where classes.classes_id = attendance.classes_id
	            and classes.grade_id = grade.grade_id and time = #{time}
	            GROUP BY grade.grade_name
    </select>

    <select id="getAttendanceByTutor" parameterType="java.time.LocalDate" resultMap="attendanceVO">
        select tutor.tutor_id, tutor_name,SUM(should_attend_num) should_attend_sum,
            SUM(real_attend_num) real_attend_sum, SUM(real_attend_num)/SUM(should_attend_num) rate, time
            from attendance, tutor
                where attendance.tutor_id = tutor.tutor_id and time = #{time}
                GROUP BY tutor.tutor_name
    </select>

    <select id="getAttendanceByLecturer" parameterType="java.time.LocalDate" resultMap="attendanceVO">
        select lecturer.lecturer_id, lecturer_name, SUM(should_attend_num) should_attend_sum,
            SUM(real_attend_num) real_attend_sum, SUM(real_attend_num)/SUM(should_attend_num) rate,time
            from attendance, lecturer
            where attendance.lecturer_id = lecturer.lecturer_id
                and time = #{time}
            GROUP BY lecturer.lecturer_name
    </select>

    <select id="getAttendanceByClasses" parameterType="java.time.LocalDate" resultMap="attendanceVO">
        select classes.classes_id, classes_name, SUM(should_attend_num) should_attend_sum, SUM(real_attend_num) real_attend_sum, SUM(real_attend_num)/SUM(should_attend_num) rate, time
	        from attendance,classes
	        where attendance.classes_id = classes.classes_id and time = #{time}
	        GROUP BY classes.classes_name
    </select>

    <select id="getAttendanceByWeek" resultMap="attendanceVO">
        select SUM(should_attend_num) should_attend_sum, SUM(real_attend_num) real_attend_sum, SUM(real_attend_num)/SUM(should_attend_num) rate, time, grade_name
	        from attendance a, classes c, grade g
	            where a.classes_id = c.classes_id and c.grade_id = g.grade_id
	            and time &gt; #{beginTime} and time &lt;= #{endTime}
	            group by grade_name, time order by g.grade_name,time
    </select>

    <select id="getAllAttendance" parameterType="java.time.LocalDate" resultMap="attendanceVO">
        select SUM(should_attend_num) should_attend_sum, SUM(real_attend_num) real_attend_sum, SUM(real_attend_num)/SUM(should_attend_num) rate
	    from attendance where time &gt; #{beginTime} and time &lt;= #{endTime}
    </select>

    <select id="getLastDay" resultType="java.util.Date">
        select MAX(time) from attendance;
    </select>

    <select id="selectAllAttendanceByPage" parameterType="com.mhys.cyxy.domain.dto.AttendanceDTO" resultMap="attendanceVO">
        select a.attendance_id, a.time,g.grade_id, cls.classes_id, l.lecturer_id, tu.tutor_id, a.should_attend_num,
            a.real_attend_num, (a.real_attend_num/a.should_attend_num) rate, a.non_attend_desc,
            a.is_able, g.grade_name, cls.classes_name,l.lecturer_name,tu.tutor_name
	        from attendance a, grade g, classes cls, lecturer l, tutor tu
		    where a.classes_id = cls.classes_id and g.grade_id = cls.grade_id and a.lecturer_id = l.lecturer_id and a.tutor_id = tu.tutor_id
            <if test="gradeId != null">
                and g.grade_id = #{gradeId}
            </if>
            <if test="classesId != null">
                and cls.classes_id = #{classesId}
            </if>
            <if test="tutorId != null">
                and tu.tutor_id = #{tutorId}
            </if>
            <if test="lecturerId != null">
                and l.lecturer_id = #{lecturerId}
            </if>
            <if test="isAble != null">
                and a.is_able = #{isAble}
            </if>
            <if test="gradeName != null">
                and g.grade_name like '%${gradeName}%'
            </if>
            <if test="classesName != null">
                and cls.classes_name like '%${classesName}%'
            </if>
            <if test="tutorName != null">
                and tu.tutor_name like '%${tutorName}%'
            </if>
            <if test="lecturerName != null">
                and l.lecturer_name like '%${lecturerName}%'
            </if>
            order by a.attendance_id desc

    </select>

    <select id="selectAttendanceById" parameterType="java.lang.Integer" resultMap="attendanceVO">
        select a.attendance_id, a.time,g.grade_id, cls.classes_id, l.lecturer_id, tu.tutor_id, a.should_attend_num,
            a.real_attend_num, (a.real_attend_num/a.should_attend_num) rate, a.non_attend_desc,
            a.is_able, g.grade_name, cls.classes_name,l.lecturer_name,tu.tutor_name
	        from attendance a, grade g, classes cls, lecturer l, tutor tu
            where a.classes_id = cls.classes_id and g.grade_id = cls.grade_id and a.lecturer_id = l.lecturer_id and a.tutor_id = tu.tutor_id
                and a.attendance_id = #{attendanceId}
    </select>

    <insert id="addAttendance" useGeneratedKeys="true" keyProperty="attendanceId" parameterType="com.mhys.cyxy.domain.Attendance">
        insert into attendance(`time`,classes_id,lecturer_id,tutor_id,should_attend_num,real_attend_num,non_attend_desc,is_able)
            value(#{time},#{classesId},#{lecturerId},#{tutorId},#{shouldAttendNum},#{realAttendNum},#{nonAttendDesc},#{isAble})
    </insert>
    <update id="updateAttendance" parameterType="com.mhys.cyxy.domain.Attendance">
        update attendance set
        <if test="time != null">
            time = #{time},
        </if>
        <if test="classesId != 0">
            classes_id = #{classesId},
        </if>
        <if test="lecturerId != 0">
            lecturer_id = #{lecturerId},
        </if>
        <if test="tutorId != 0">
            tutor_id = #{tutorId},
        </if>
        <if test="shouldAttendNum != null">
            should_attend_num = #{shouldAttendNum},
        </if>
        <if test="realAttendNum != null">
            real_attend_num = #{realAttendNum},
        </if>
        <if test="nonAttendDesc != null">
            non_attend_desc = #{nonAttendDesc},
        </if>
        <if test="isAble != null">
            is_able = #{isAble},
        </if>
        attendance_id = #{attendanceId}
        where attendance_id = #{attendanceId}
    </update>

    <delete id="deleteAttendanceById" parameterType="java.lang.Integer">
        delete from attendance where attendance_id = #{attendanceId}
    </delete>

    <resultMap id="attendanceVO" type="com.mhys.cyxy.domain.vo.AttendanceVO">
        <result column="should_attend_num" jdbcType="INTEGER" property="shouldAttendNum" />
        <result column="real_attend_num" jdbcType="INTEGER" property="realAttendNum" />
        <result column="non_attend_desc" jdbcType="VARCHAR" property="nonAttendDesc" />
        <result column="should_attend_sum" jdbcType="INTEGER" property="shouldAttendSum" />
        <result column="real_attend_sum" jdbcType="INTEGER" property="realAttendSum" />
        <result column="is_able" jdbcType="INTEGER" property="isAble" />
        <result column="rate" jdbcType="FLOAT" property="rate" />
        <result column="time" jdbcType="DATE" property="time" />
        <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
        <result column="tutor_id" jdbcType="INTEGER" property="tutorId" />
        <result column="lecturer_id" jdbcType="INTEGER" property="lecturerId" />
        <result column="classes_id" jdbcType="INTEGER" property="classesId" />
        <result column="grade_name" jdbcType="VARCHAR" property="gradeName" />
        <result column="tutor_name" jdbcType="VARCHAR" property="tutorName" />
        <result column="lecturer_name" jdbcType="VARCHAR" property="lecturerName" />
        <result column="classes_name" jdbcType="VARCHAR" property="classesName" />
    </resultMap>
</mapper>